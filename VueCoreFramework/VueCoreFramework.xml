<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VueCoreFramework</name>
    </assembly>
    <members>
        <member name="T:VueCoreFramework.Controllers.AccountController">
            <summary>
            An MVC controller for handling user account tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Services.IEmailSender,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Logging.ILogger{VueCoreFramework.Controllers.AccountController},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.SignInManager{VueCoreFramework.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.TokenProviderOptions},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.AccountController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ChangeEmail(System.String,System.String)">
            <summary>
            The endpoint reached when a user clicks a link in an email generated by the <see
            cref="T:VueCoreFramework.Controllers.ManageController"/>'s ChangeEmail action.
            </summary>
            <returns>
            Redirect to an error page in the event of a bad request; or to a success page if successful.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ConfirmEmail(System.String,System.String)">
            <summary>
            The endpoint reached when a user clicks a link in an email generated by various actions
            which require confirmation of an email address.
            </summary>
            <returns>
            Redirect to an error page in the event of a bad request; or to a success page if successful.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ExternalLogin(VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel)">
            <summary>
            Called to log in with an external authentication provider account.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel"/> used to transfer task data.</param>
            <returns>
            A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel"/> used to transfer task data in the event of a problem,
            or a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> for the authentication provider.
            </returns>
            <response code="400">There was a problem authenticating with that provider.</response>
            <response code="302">Redirect to external authentication provider.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ExternalLoginCallback(System.String,System.Boolean,System.String)">
            <summary>
            The endpoint reached when a user returns from an external authentication provider when
            attempting to sign in with that account.
            </summary>
            <returns>A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel"/> used to transfer task data.</returns>
            <response code="400">Invalid login attempt.</response>
            <response code="200">External login response data.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ForgotPassword(VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel)">
            <summary>
            Called to initiate a password reset for a user.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel"/> used to transfer task data.</param>
            <response code="200">Success.</response>
            <response code="403">Locked account.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.GetAuthProviders">
            <summary>
            Called to retrieve a list of accepted external authentication providers.
            </summary>
            <response code="200">A list of accepted external authentication providers.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.GetUserAuthProviders">
            <summary>
            Called to retrieve a list of external authentication providers presently associated with
            the current user's account.
            </summary>
            <response code="400">Invalid user.</response>
            <response code="200">A list of external authentication providers.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.HasPassword">
            <summary>
            Called to determine if the current user account has a local password (may be false if the
            user registered with an external authentication provider).
            </summary>
            <response code="400">Invalid user.</response>
            <response code="200">A 'yes' or 'no' response.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.Login(VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel)">
            <summary>
            Called to log in with the provided credentials.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel"/> used to transfer task data.</param>
            <response code="400">Invalid login attempt.</response>
            <response code="403">Locked account.</response>
            <response code="200">Login response data.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.Register(VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel)">
            <summary>
            Called to register a new user account with the provided credentials. User accounts cannot
            be used immediately after registration; a confirmation email is sent and the link
            included must be followed to confirm the address.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel"/> used to transfer task data.</param>
            <response code="400">Invalid login attempt.</response>
            <response code="403">Locked account.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ResetPassword(System.String)">
            <summary>
            The endpoint reached when a user clicks a link in an email generated by the ForgotPassword action.
            </summary>
            <returns>
            Redirect to an error page in the event of a bad request; or to a password reset page.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.ResetPassword(VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel)">
            <summary>
            Called to initiate a password reset for a user after following an email link verifying the user.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel"/> used to transfer task data.</param>
            <response code="403">Locked account.</response>
            <response code="400">Invalid reset attempt.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.RestoreEmail(System.String,System.String)">
            <summary>
            The endpoint reached when following the link in an email which allows a user to restore
            their email address after a change. Can be used to reverse a mistake or unauthorized change.
            </summary>
            <param name="userId">The primary key of the user to restore. Generated automatically.</param>
            <param name="code">A verification code. Generated automatically.</param>
            <returns>A JSON object containing an error in the event of a problem; or an OK result.</returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.AccountController.VerifyUser(System.String)">
            <summary>
            Called to get information about the user with the given username. Admin only.
            </summary>
            <param name="username">The username to verify.</param>
            <response code="400">Bad request.</response>
            <response code="404">No such user.</response>
            <response code="200">User data.</response>
        </member>
        <member name="T:VueCoreFramework.Controllers.AuthorizationController">
            <summary>
            An MVC controller for handling user authorization tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.AuthorizationController.#ctor(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.TokenProviderOptions})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.AuthorizationController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.AuthorizationController.Authenticate(System.String)">
            <summary>
            Called to authenticate the user.
            </summary>
            <response code="200">
            An <see cref="T:VueCoreFramework.Models.ViewModels.AuthorizationViewModel"/> indicating whether the current user is authenticated.
            </response>
        </member>
        <member name="M:VueCoreFramework.Controllers.AuthorizationController.Authorize(System.String,System.String,System.String)">
            <summary>
            Called to authorize the current user for a particular operation.
            </summary>
            <param name="dataType">
            The type of data involved in the current operation.
            </param>
            <param name="operation">An optional operation being performed.</param>
            <param name="id">An optional primary key for the item involved in the current operation.</param>
            <response code="200">
            An <see cref="T:VueCoreFramework.Models.ViewModels.AuthorizationViewModel"/> indicating whether the current user is authorized.
            </response>
        </member>
        <member name="T:VueCoreFramework.Controllers.DataController">
            <summary>
            An MVC controller for handling data manipulation tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Data.ApplicationDbContext,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Logging.ILogger{VueCoreFramework.Controllers.AccountController},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.DataController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Called to create a new instance of <paramref name="dataType"/> and add it to the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> instance.
            </summary>
            <param name="dataType">The type of entity to add.</param>
            <param name="childProp">
            An optional navigation property which will be set on the new object.
            </param>
            <param name="parentId">
            The primary key of the entity which will be set on the <paramref name="childProp"/> property.
            </param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A ViewModel representing the newly added item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.AddChildrenToCollection(System.String,System.String,System.String,System.String[])">
            <summary>
            Called to add an assortment of child entities to a parent entity under the given
            navigation property.
            </summary>
            <param name="dataType">The type of entities to add.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property to which the children will be added.</param>
            <param name="childIds">The primary keys of the child entities which will be added.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.Duplicate(System.String,System.String,System.String)">
            <summary>
            Called to duplicate an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the new copy.
            </summary>
            <param name="dataType">The type of entity to find.</param>
            <param name="id">The primary key of the entity to be found.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A ViewModel representing the newly added item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.Find(System.String,System.String,System.String)">
            <summary>
            Called to find an entity with the given primary key value and return a ViewModel for that
            entity. If no entity is found, an empty ViewModel is returned (not null).
            </summary>
            <param name="dataType">The type of entity to find.</param>
            <param name="id">The primary key of the entity to be found.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="404">No such item.</response>
            <response code="200">A ViewModel representing the found item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetAll(System.String,System.String)">
            <summary>
            Called to retrieve ViewModels representing all the entities in the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/>'s set.
            </summary>
            <param name="dataType">The type of entities to get.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A ViewModel representing the found item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetAllChildIds(System.String,System.String,System.String)">
            <summary>
            Called to retrieve all the primary keys of the entities in a given relationship.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A list of child primary keys.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetChildId(System.String,System.String,System.String)">
            <summary>
            Called to retrieve the primary key of a child entity in the given relationship.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property of the relationship.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The child's primary key.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetChildPage(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Called to retrieve a page of child entities in a given relationship.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">
            A list of ViewModels representing the child objects on the requested page.
            </response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetChildTotal(System.String,System.String,System.String)">
            <summary>
            Called to retrieve the total number of child entities in the given relationship.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The total.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetChildTypes">
            <summary>
            Called to retrieve a list of all entities which are not MenuClass types.
            </summary>
            <response code="400">Bad request.</response>
            <response code="200">The list of type info.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetFieldDefinitions(System.String)">
            <summary>
            Called to retrieve a list of <see cref="T:VueCoreFramework.Models.FieldDefinition"/>s for the given data type.
            </summary>
            <param name="dataType">The type of the entity.</param>
            <response code="400">Bad request.</response>
            <response code="200">The list of <see cref="T:VueCoreFramework.Models.FieldDefinition"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetPage(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.String[],System.String)">
            <summary>
            Called to retrieve the set of entities with the given paging parameters.
            </summary>
            <param name="dataType">The type of the entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="except">
            The primary keys of items which should be excluded from the results before calculating
            the page contents.
            </param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">
            A list of ViewModels representing the entities on the requested page.
            </response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetTotal(System.String)">
            <summary>
            Called to retrieve the total number of entities of the given data type.
            </summary>
            <param name="dataType">The type of the entity.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The total.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.GetTypes">
            <summary>
            Called to retrieve a list of all entities which are MenuClass types.
            </summary>
            <response code="400">Bad request.</response>
            <response code="200">The list of type info.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.Remove(System.String,System.String)">
            <summary>
            Called to remove an entity from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="dataType">The type of entity to remove.</param>
            <param name="id">The primary key of the entity to remove.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.RemoveChildrenFromCollection(System.String,System.String,System.String,System.String[])">
            <summary>
            Called to remove an assortment of child entities from a parent entity under the given
            navigation property.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="id">The primary key of the parent entity.</param>
            <param name="childProp">The navigation property from which the children will be removed.</param>
            <param name="childIds">The primary keys of the child entities which will be removed.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.RemoveFromParent(System.String,System.String,System.String)">
            <summary>
            Called to terminate a relationship between two entities. If the child entity is made an
            orphan by the removal and is not a MenuClass object, it is then removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="dataType">The type of the child entity.</param>
            <param name="id">The primary key of the child entity whose relationship is being severed.</param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.RemoveRange(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Called to remove a collection of entities from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="dataType">The type of entity to remove.</param>
            <param name="ids">The primary keys of the entities to remove.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.RemoveRangeFromParent(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Called to terminate a relationship for multiple entities. If any child entity is made an
            orphan by the removal and is not a MenuClass object, it is then removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="dataType">The type of the child entity.</param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
            <param name="ids">
            The primary keys of child entities whose relationships are being severed.
            </param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.ReplaceChild(System.String,System.String,System.String,System.String)">
            <summary>
            Called to create a relationship between two entities, replacing another entity which was
            previously in that relationship with another one. If the replaced entity is made an
            orphan by the removal and is not a MenuClass object, it is then removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="parentId">The primary key of the parent entity in the relationship.</param>
            <param name="newChildId">
            The primary key of the new child entity entering into the relationship.
            </param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.ReplaceChildWithNew(System.String,System.String,System.String,System.String)">
            <summary>
            Called to create a relationship between two entities, replacing another entity which was
            previously in that relationship with a new entity. If the replaced entity is made an
            orphan by the removal and is not a MenuClass object, it is then removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="dataType">The type of the parent entity.</param>
            <param name="parentId">The primary key of the parent entity in the relationship.</param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A ViewModel representing the newly added item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.DataController.Update(System.String,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Called to update an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="dataType">The type of entity to update.</param>
            <param name="item">The item to update.</param>
            <param name="culture">The name of the requested culture. Taken from the Accept-Language header.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A ViewModel representing the updated item.</response>
        </member>
        <member name="T:VueCoreFramework.Controllers.GroupController">
            <summary>
            An MVC controller for handling group membership tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Data.ApplicationDbContext,VueCoreFramework.Services.IEmailSender,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.GroupController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.AddUserToGroup(System.String,System.String,System.String)">
            <summary>
            The endpoint reached when a user clicks a link in an email generated by the InviteUserToGroup action.
            </summary>
            <param name="userId">
            The ID of the user to add to the group.
            </param>
            <param name="groupId">The ID of the group to which the user will be added.</param>
            <param name="code">A verification code. Auto-generated.</param>
            <returns>
            Redirect to an error page in the event of a bad request; or to the group management page if successful.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.GetGroup(System.String)">
            <summary>
            Called to get information about the given group.
            </summary>
            <param name="group">The name of the group to retrieve.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="404">Not found.</response>
            <response code="200">A GroupViewModel representing the found item.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.GetGroupMemberships">
            <summary>
            Called to find all groups to which the current user belongs.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A list of <see cref="T:VueCoreFramework.Models.ViewModels.GroupViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.InviteUserToGroup(System.String,System.String)">
            <summary>
            Called to invite a user to a group.
            </summary>
            <param name="username">
            The username of the user to invite to the group.
            </param>
            <param name="group">The name of the group to which the user will be invited.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.LeaveGroup(System.String)">
            <summary>
            Called to remove the current user from the given group.
            </summary>
            <param name="group">The name of the group to leave.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.RemoveGroup(System.String)">
            <summary>
            Called to remove the given group.
            </summary>
            <param name="group">The name of the group to remove.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.RemoveUserFromGroup(System.String,System.String)">
            <summary>
            Called to remove the given user from the given group.
            </summary>
            <param name="username">The name of the user to remove from the group.</param>
            <param name="group">The group from which to remove the user.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.StartNewGroup(System.String)">
            <summary>
            Called to create a new group with the given name, with the current user as its manager.
            </summary>
            <param name="group">The name of the group to create.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.TransferManagerToUser(System.String,System.String)">
            <summary>
            Called to transfer management of the given group to the given user.
            </summary>
            <param name="username">The name of the user who is to be the new manager.</param>
            <param name="group">The name of the group whose manager is to change.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.GroupController.TransferSiteAdminToUser(System.String)">
            <summary>
            Called to transfer the site admin role to the given user.
            </summary>
            <param name="username">The name of the user who is to be the new site admin.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="T:VueCoreFramework.Controllers.HomeController">
            <summary>
            The primary MVC controller for the site.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.HomeController.#ctor(Microsoft.Extensions.Logging.ILogger{VueCoreFramework.Controllers.HomeController})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.HomeController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.HomeController.Index(System.String)">
            <summary>
            The primary endpoint for the site. Displays the SPA.
            </summary>
            <param name="forwardUrl">
            An optional redirect URL which may be used to load a specific page within the SPA.
            </param>
        </member>
        <member name="M:VueCoreFramework.Controllers.HomeController.Error">
            <summary>
            Shows a generic error page, in the event that an internal error occurs at a stage which
            prevents even loading the SPA (which has its own error pages).
            </summary>
        </member>
        <member name="T:VueCoreFramework.Controllers.ManageController">
            <summary>
            An MVC controller for handling user management tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Data.ApplicationDbContext,VueCoreFramework.Services.IEmailSender,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Builder.RequestLocalizationOptions},Microsoft.Extensions.Logging.ILogger{VueCoreFramework.Controllers.ManageController},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.SignInManager{VueCoreFramework.Models.ApplicationUser},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.ManageController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.ChangeEmail(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to initiate an email address change for a user.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="403">Locked account.</response>
            <response code="400">Bad request.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.ChangePassword(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to initiate a password change for a user.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="403">Locked account.</response>
            <response code="400">Bad request.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.ChangeUsername(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to initiate a username change for a user.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="403">Locked account.</response>
            <response code="400">Bad request.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.DeleteAccount(System.String)">
            <summary>
            Called to initiate an account deletion for a user.
            </summary>
            <response code="403">Locked account.</response>
            <response code="400">Bad request.</response>
            <response code="200">Request received.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.DeleteAccountCallback(System.String,System.String,System.String)">
            <summary>
            The endpoint reached when a user clicks the link in an email sent to confirm an account deletion.
            </summary>
            <returns>Redirects to the home page.</returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.GetCultures">
            <summary>
            Called to retrieve a list of the supported cultures.
            </summary>
            <returns>A list of the supported cultures.</returns>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.LinkLogin(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to link a user's external authentication provider account with their site account.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="400">Bad request.</response>
            <response code="302">Redirect to external authentication provider.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.LinkLoginCallback">
            <summary>
            The endpoint reached when a user returns from an external authentication provider when
            attempting to link that account with their site account.
            </summary>
            <response code="400">Bad request.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.LoadXferUsernames">
            <summary>
            Gets a list of the usernames of members who are in groups with the current user.
            </summary>
            <response code="403">Locked account.</response>
            <response code="200">The list of usernames.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.LockAccount(System.String)">
            <summary>
            Called to lock a user's account. Admin only.
            </summary>
            <param name="username">The username of the account to lock.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.RemoveLogin(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to remove a user's external authentication provider account from their site account.
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="400">Bad request.</response>
            <response code="403">Locked account.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.SetCulture(System.String)">
            <summary>
            Called to set the current user's preferred culture.
            </summary>
            <param name="culture">The culture code to set for the current user.</param>
            <response code="400">Bad request.</response>
            <response code="403">Locked account.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.SetPassword(VueCoreFramework.Models.ViewModels.ManageUserViewModel)">
            <summary>
            Called to set a password for a user (for users who initially registered with an external
            authentication provider, rather than a local site account).
            </summary>
            <param name="model">A <see cref="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel"/> used to transfer task data.</param>
            <response code="400">Bad request.</response>
            <response code="403">Locked account.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ManageController.UnlockAccount(System.String)">
            <summary>
            Called to unlock a user's account. Admin only.
            </summary>
            <param name="username">The username of the account to unlock.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="T:VueCoreFramework.Controllers.MessageController">
            <summary>
            An MVC controller for handling messaging tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Data.ApplicationDbContext,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.MessageController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetConversations">
            <summary>
            Called to get a list of users involved in individual conversations in which the current
            user is a sender or recipient, with an unread message count.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A list of <see cref="T:VueCoreFramework.Models.ViewModels.ConversationViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetGroupMessages(System.String)">
            <summary>
            Called to get the messages exchanged within the given group.
            </summary>
            <param name="group">The name of the group whose conversation will be retrieved.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The ordered list of <see cref="T:VueCoreFramework.Models.ViewModels.MessageViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetProxyConversations(System.String)">
            <summary>
            Called to get a list of users involved in individual conversations in which the given
            user is a sender or recipient. For use by admins to review chat logs.
            </summary>
            <param name="proxy">The name of the user whose conversation will be retrieved.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A list of <see cref="T:VueCoreFramework.Models.ViewModels.ConversationViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetProxyUserMessages(System.String,System.String)">
            <summary>
            Called to get the messages between a proxy user and the given user. For use by admins to
            review chat logs.
            </summary>
            <param name="proxy">
            The name of the user whose conversation with the other user will be retrieved.
            </param>
            <param name="username">
            The name of the user whose conversation with the proxy user will be retrieved.
            </param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The ordered list of <see cref="T:VueCoreFramework.Models.ViewModels.MessageViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetSystemMessages">
            <summary>
            Called to get the system messages sent to the current user which have not been marked
            deleted by the current user.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The ordered list of <see cref="T:VueCoreFramework.Models.ViewModels.MessageViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.GetUserMessages(System.String)">
            <summary>
            Called to get the messages between the current user and the given user which have not
            been marked deleted by the current user.
            </summary>
            <param name="username">
            The name of the user whose conversation with the current user will be retrieved.
            </param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The ordered list of <see cref="T:VueCoreFramework.Models.ViewModels.MessageViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.MarkConversationDeleted(System.String)">
            <summary>
            Called to mark a conversation with a given user deleted.
            </summary>
            <param name="username">
            The name of the user whose conversation with the current user will be marked deleted.
            </param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.MarkConversationRead(System.String)">
            <summary>
            Called to mark a conversation with a given user read, from the perspective of the current user.
            </summary>
            <param name="username">
            The name of the user whose conversation with the current user will be marked read.
            </param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.MarkSystemMessagesRead">
            <summary>
            Called to mark all system messages sent to the current user read.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.SendMessageToGroup(System.String,System.String)">
            <summary>
            Called to send a message to the given group.
            </summary>
            <param name="group">The name of the group to which the message will be sent.</param>
            <param name="message">The message to send.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.MessageController.SendMessageToUser(System.String,System.String)">
            <summary>
            Called to send a message to the given user.
            </summary>
            <param name="username">The name of the user to whom the message will be sent.</param>
            <param name="message">The message to send.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="T:VueCoreFramework.Controllers.ShareController">
            <summary>
            An MVC controller for handling sharing tasks.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AdminOptions},VueCoreFramework.Data.ApplicationDbContext,Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.ErrorMessages},Microsoft.Extensions.Localization.IStringLocalizer{VueCoreFramework.Services.EmailMessages},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{VueCoreFramework.Models.ApplicationUser})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Controllers.ShareController"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.GetCurrentShares(System.String,System.String)">
            <summary>
            Called to retrieve the list of users and groups with whom the given data is current shared.
            </summary>
            <param name="dataType">The type of data being shared.</param>
            <param name="id">Optionally, the primary key of a specific item being shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">A list of <see cref="T:VueCoreFramework.Models.ViewModels.ShareViewModel"/>s.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.GetShareableGroupCompletion(System.String)">
            <summary>
            Called to find a group name which starts with the given input. Only groups the current
            user has access to will be returned.
            </summary>
            <param name="input">A search string.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="404">Not found.</response>
            <response code="200">The first matched name.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.GetShareableUsernameCompletion(System.String)">
            <summary>
            Called to find a username which starts with the given input. Only names of users the
            current user has access to will be returned.
            </summary>
            <param name="input">A search string.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="404">Not found.</response>
            <response code="200">The first matched name.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.GetShareableGroupMembers">
            <summary>
            Called to retrieve the list of users with whom the current user may share.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The list of users.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.GetShareableGroupSubset">
            <summary>
            Called to retrieve a subset of the list of groups with whom the current user may share.
            </summary>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">The list of group names.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.HideDataFromAll(System.String,System.String,System.String)">
            <summary>
            Called to stop the given data from being shared with all users.
            </summary>
            <param name="dataType">The type of data being shared.</param>
            <param name="operation">Optionally, an operation whose permission is being removed.</param>
            <param name="id">Optionally, the primary key of a specific item being shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.HideDataFromGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Called to stop the given data from being shared with the given group.
            </summary>
            <param name="group">The name of the group with whom the data is being shared.</param>
            <param name="dataType">The type of data being shared.</param>
            <param name="operation">Optionally, an operation whose permission is being removed.</param>
            <param name="id">Optionally, the primary key of a specific item being shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.HideDataFromUser(System.String,System.String,System.String,System.String)">
            <summary>
            Called to stop the given data from being shared with the given user.
            </summary>
            <param name="username">The name of the user with whom the data is being shared.</param>
            <param name="dataType">The type of data being shared.</param>
            <param name="operation">Optionally, an operation whose permission is being removed.</param>
            <param name="id">Optionally, the primary key of a specific item being shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.ShareDataWithAll(System.String,System.String,System.String)">
            <summary>
            Called to share the given data with all users.
            </summary>
            <param name="dataType">The type of data to be shared.</param>
            <param name="operation">Optionally, an operation for which to grant permission.</param>
            <param name="id">Optionally, the primary key of a specific item to be shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.ShareDataWithGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Called to share the given data with the given group.
            </summary>
            <param name="group">The name of the group with whom to share the data.</param>
            <param name="dataType">The type of data to be shared.</param>
            <param name="operation">Optionally, an operation for which to grant permission.</param>
            <param name="id">Optionally, the primary key of a specific item to be shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:VueCoreFramework.Controllers.ShareController.ShareDataWithUser(System.String,System.String,System.String,System.String)">
            <summary>
            Called to share the given data with the given user.
            </summary>
            <param name="username">The name of the user with whom to share the data.</param>
            <param name="dataType">The type of data to be shared.</param>
            <param name="operation">Optionally, an operation for which to grant permission.</param>
            <param name="id">Optionally, the primary key of a specific item to be shared.</param>
            <response code="400">Bad request.</response>
            <response code="403">Forbidden.</response>
            <response code="200">Success.</response>
        </member>
        <member name="T:VueCoreFramework.Data.ApplicationDbContext">
            <summary>
            The application's Entity Framework database context.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Logs">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.Log"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Messages">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.Message"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Airlines">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.Airline"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Cities">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.City"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Countries">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.Country"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.Leaders">
            <summary>
            Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> of <see cref="T:VueCoreFramework.Models.Leader"/>s.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.ApplicationDbContext.RepositoryCache">
            <summary>
            Caches instances of <see cref="T:VueCoreFramework.Data.IRepository"/> for the entity types tracked by this
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VueCoreFramework.Data.ApplicationDbContext})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="options">The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>.</param>
        </member>
        <member name="M:VueCoreFramework.Data.ApplicationDbContext.GetRepositoryForType(System.Type)">
            <summary>
            Gets a <see cref="T:VueCoreFramework.Data.Repository`1"/> for the given type, using a cached reference, if one
            already exists.
            </summary>
            <param name="type">The entity type of the repository.</param>
        </member>
        <member name="M:VueCoreFramework.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures the schema required for the framework.
            </summary>
            <param name="builder">The builder being used to construct the model for this context.</param>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.CulturalAttribute">
            <summary>
            Indicates that this property provides culture-specific values.
            </summary>
            <remarks>
            Only text properties are valid targets for this Attribute. The property type must be <see
            cref="T:System.String"/>, as they are stored as JSON objects with culture codes (e.g. "en-US") as
            keys, as well as a key called "default" whose value indicates the default culture of the
            object. The entire JSON object is sent with the ViewModel for the object, but the SPA
            framework will only display the value corresponding to the culture set for the current user.
            If the current culture is not available in the JSON object, the value for the "default"
            culture will be displayed. When setting a new value, the SPA framework will set the value for
            the current culture. If no other values have been set, it will also set the "default" value
            to the current culture.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.DataClassAttribute">
            <summary>
            Sets data type-specific information for use in the SPA framework.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.DataClassAttribute.IconClass">
            <summary>
            The name of a Material Icon, will appear as the class's icon in the dashboard.
            </summary>
            <remarks>Spaces should be replaced by underscores in icon names.</remarks>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.DataClassAttribute.FontAwesome">
            <summary>
            Indicates that the IconClass is a FontAwesome icon, rather than a Material Icon.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.DataClassAttribute.DashboardTableContent">
            <summary>
            An optional path to a Vue component which is shown on the data class' dashboard above
            data tables. Paths are relative to the components/data folder.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.DataClassAttribute.DashboardFormContent">
            <summary>
            An optional path to a Vue component which is shown on the data class' dashboard above
            forms. Paths are relative to the components/data folder. This component will receive the
            operation being performed and the id of the item as props.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.HelpAttribute">
            <summary>
            Allows setting help text for a property's field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.HelpAttribute.HelpText">
            <summary>
            The help text for the field.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.HelpAttribute.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="helpText">The help text for the field.</param>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.HiddenAttribute">
            <summary>
            Allows marking a property as hidden in the user interface.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.HiddenAttribute.Hidden">
            <summary>
            Indicates that the field is not displayed in the user interface at all.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.HiddenAttribute.HideInTable">
            <summary>
            Indicates that the field is not displayed in data tables.
            </summary>
            <remarks>
            If this property is true but <see cref="P:VueCoreFramework.Data.Attributes.HiddenAttribute.Hidden"/> is false, the property will be
            displayed (and is possibly editable) in forms, but is not listed in data tables only.
            This can be useful for keeping table listings brief, or for hiding entries with rich edit
            controls but ugly plain text formats (shown in data tables).
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.HiddenAttribute.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="hidden">Indicates that the property is not displayed in the user interface at all.</param>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.IconAttribute">
            <summary>
            Allows setting an icon for text, checkbox, and select fields. Other fields will ignore this attribute.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.IconAttribute.Icon">
            <summary>
            The name of a Material Icon which will decorate the field.
            </summary>
            <remarks>Spaces should be replaced by underscores in icon names.</remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.IconAttribute.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="icon">The name of a Material Icon which will decorate the field.</param>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.MenuClassAttribute">
            <summary>
            Classes with this attribute will appear in the site menu.
            </summary>
            <remarks>
            Classes without this attribute will not appear on the site menu, and so will only be
            accessible on the user interface as child objects within MenuClass objects.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.MenuClassAttribute.Category">
            <summary>
            A string with the format "supertype/type/subtype"
            </summary>
            <remarks>
            Used to generate menu and URL structure; doesn't need to reflect data relationships in
            any way. Classes can be ordered in the framework's user interface according to a
            conceptual scheme for ease of understanding or navigation, while the underlying data
            structure is arranged according to business and/or programmatic needs, and the two
            designs might be only loosely correlated.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.NameAttribute">
            <summary>
            Indicates that the property is a Name. Name properties are treated specially by the SPA
            framework in a few ways: they are pulled to the left and left-aligned in data tables, and
            pulled to the top of forms, making them into a sort of automatic header; they also get '
            (Copy)' appended during a duplication (whereas other properties are copied as-is).
            </summary>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.NavigationAttribute">
            <summary>
            Allow you to manage the controls shown on the field used to display non-collection navigation properties.
            </summary>
            <remarks>
            This property has no effect for collection navigation properties.
            Setting <see cref="P:VueCoreFramework.Data.Attributes.NavigationAttribute.NavigationType"/> to "reference" restricts the field to displaying only
            view/edit controls (no add, select, or delete controls, even if the relationship would
            normally allow these).
            Setting <see cref="P:VueCoreFramework.Data.Attributes.NavigationAttribute.NavigationType"/> to "single" restricts the field to displaying only
            add, delete, and view/edit controls (no select control even for many-to-one relationships).
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.StepAttribute">
            <summary>
            Allows setting the step value of a numeric field. Ignored for other field types.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.StepAttribute.Step">
            <summary>
            The step value of the field.
            </summary>
            <remarks>
            Always treated as a positive value, even if a negative number is set.
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.StepAttribute.#ctor(System.Double)">
            <summary>
            Default constructor.
            </summary>
            <param name="step">The step value of the field.</param>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.TextAttribute">
            <summary>
            A general-purpose attribute for setting properties of a text field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.TextAttribute.Prefix">
            <summary>
            A suffix appended to the text field. The suffix is decorative only, not treated as part of the value.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.TextAttribute.Suffix">
            <summary>
            A prefix appended to the text field. The prefix is decorative only, not treated as part of the value.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.TextAttribute.Rows">
            <summary>
            The number of rows in a multi-line textarea.
            </summary>
            <remarks>
            Setting this to a value greater than 1 will automatically generate a textarea field, even
            if the DataType has not been set to MultilineText. Values less than 1 are ignored.
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.TextAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Data.Attributes.ValidatorAttribute">
            <summary>
            Allows setting the validator to be used for this field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Attributes.ValidatorAttribute.Validator">
            <summary>
            The name of the validator to be used for this field. Must be a recognized name.
            </summary>
            <remarks>
            The validators object in vfg/vfg-custom-validators.ts is a map of names to validators (or
            known default validator names). The string set here must match a key in that object.
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Attributes.ValidatorAttribute.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="validator">The name of the validator to be used for this field.</param>
        </member>
        <member name="T:VueCoreFramework.Data.DbInitialize">
            <summary>
            Used to seed the application's database.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.DbInitialize.Initialize(System.IServiceProvider)">
            <summary>
            Seeds the application's database.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.DbInitialize.InitializeSampleData(System.IServiceProvider)">
            <summary>
            Seeds the application's database with sample data.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Data.IRepository">
            <summary>
            Represents operations with an <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> for a particular class.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.IRepository.EntityType">
            <summary>
            The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType"/> of this Repository. Read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.IRepository.FieldDefinitions">
            <summary>
            The FieldDefinitions for this repository's entity type. Read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.IRepository.PrimaryKey">
            <summary>
            The primary key <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty"/> of this Repository's entity type. Read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.IRepository.PrimaryKeyVMProperty">
            <summary>
            The name of the ViewModel property which indicates the primary key. Read-only.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.AddAsync(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Asynchronously creates a new instance of the repository's type and adds it to the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> instance.
            </summary>
            <param name="childProp">
            An optional navigation property which will be set on the new object.
            </param>
            <param name="parentId">
            The primary key of the entity which will be set on the <paramref name="childProp"/>
            property, as a string.
            </param>
            <returns>A ViewModel instance representing the newly added entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.AddAsync(System.Reflection.PropertyInfo,System.String,System.String)">
            <summary>
            Asynchronously creates a new instance of the repository's type and adds it to the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> instance.
            </summary>
            <param name="childProp">
            An optional navigation property which will be set on the new object.
            </param>
            <param name="parentId">
            The primary key of the entity which will be set on the <paramref name="childProp"/>
            property, as a string.
            </param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel instance representing the newly added entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.AddChildrenToCollectionAsync(System.String,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously adds an assortment of child entities to a parent entity under the given
            navigation property.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property to which the children will be added.</param>
            <param name="children">The primary keys of the child entities which will be added, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.DuplicateAsync(System.String)">
            <summary>
            Asynchronously duplicates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the new copy.
            </summary>
            <param name="id">The primary key of the entity to be copied, as a string.</param>
            <returns>A ViewModel representing the new item.</returns>
            <remarks>
            All non-navigation properties are copied. Navigation properties for one-to-many or
            many-to-many relationships are duplicated. Navigation properties for other
            relationships are left null (since the relationship forbids having more than one).
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.DuplicateAsync(System.String,System.String)">
            <summary>
            Asynchronously duplicates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the new copy.
            </summary>
            <param name="id">The primary key of the entity to be copied, as a string.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the new item.</returns>
            <remarks>
            All non-navigation properties are copied. Navigation properties for one-to-many or
            many-to-many relationships are duplicated. Navigation properties for other
            relationships are left null (since the relationship forbids having more than one).
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.FindAsync(System.String)">
            <summary>
            Finds an entity with the given primary key value and returns a ViewModel for that entity.
            If no entity is found, null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <returns>A ViewModel representing the item found, or an empty ViewModel if none is found.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.FindAsync(System.String,System.String)">
            <summary>
            Finds an entity with the given primary key value and returns a ViewModel for that entity.
            If no entity is found, null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the item found, or an empty ViewModel if none is found.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.FindItemAsync(System.String)">
            <summary>
            Finds an entity with the given primary key value. If no entity is found, then null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <returns>
            The item found, or null if none is found.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.FindItemWithPKAsync(System.Object)">
            <summary>
            Finds an entity with the given primary key value. If no entity is found, then null is returned.
            </summary>
            <param name="key">The primary key of the entity to be found.</param>
            <returns>
            The item found, or null if none is found.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetAllAsync">
            <summary>
            Enumerates all the entities in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>'s set, returning a
            ViewModel representing each.
            </summary>
            <returns>ViewModels representing the items in the set.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetAllAsync(System.String)">
            <summary>
            Enumerates all the entities in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>'s set, returning a
            ViewModel representing each.
            </summary>
            <param name="culture">A string indicating the current culture.</param>
            <returns>ViewModels representing the items in the set.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetAllChildIdsAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Finds the primary keys of all child entities in the given relationship, as strings.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetChildIdAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Finds the primary key of a child entity in the given relationship, as a string.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetChildPageAsync(System.String,System.Reflection.PropertyInfo,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim})">
            <summary>
            Calculates and enumerates the set of child entities in a given relationship with the
            given paging parameters, as ViewModels.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetChildPageAsync(System.String,System.Reflection.PropertyInfo,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the set of child entities in a given relationship with the
            given paging parameters, as ViewModels.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetChildTotalAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Retrieves the total number of child entities in the given relationship.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <returns>
            A <see cref="T:System.Int64"/> that represents the total number of children in the relationship.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetPageAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})">
            <summary>
            Calculates and enumerates the set of entities with the given paging parameters, as ViewModels.
            </summary>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="except">
            An enumeration of primary keys of items which should be excluded from the results before
            calculating the page contents, as strings.
            </param>
            <param name="claims">The collection of claims held by the current user.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetPageAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the set of entities with the given paging parameters, as ViewModels.
            </summary>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="except">
            An enumeration of primary keys of items which should be excluded from the results before
            calculating the page contents, as strings.
            </param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetPageItemsAsync(System.Linq.IQueryable{System.Object},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the given items with the given paging parameters, as ViewModels.
            </summary>
            <param name="items">The items to filter, sort, and page.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetPrimaryKeyFromString(System.String)">
            <summary>
            Converts the given string into its equivalent primary key for this type.
            </summary>
            <param name="pk_string">The primary key to convert, as a string.</param>
            <returns>The primary key, as whatever type is defined by the entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.GetTotalAsync">
            <summary>
            Asynchronously returns a <see cref="T:System.Int64"/> that represents the total number of entities
            in the set.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.RemoveAsync(System.String)">
            <summary>
            Asynchronously removes an entity from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="id">The primary key of the entity to remove, as a string.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.RemoveChildrenFromCollectionAsync(System.String,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously removes an assortment of child entities from a parent entity under the
            given navigation property.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property from which the children will be removed.</param>
            <param name="childIds">The primary keys of the child entities which will be removed, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.RemoveFromParentAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously terminates a relationship bewteen two entities. If the child entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="id">The primary key of the child entity whose relationship is being severed, as a string.</param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.RemoveRangeAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously removes a collection of entities from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="ids">An enumeration of the primary keys of the entities to remove, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.RemoveRangeFromParentAsync(System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously terminates a relationship for multiple entities. If any child entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="ids">
            An enumeration of primary keys of child entities whose relationships are being severed, as strings.
            </param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
            <returns>A list of the Ids of any items removed from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>, as strings.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.ReplaceChildAsync(System.String,System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with another one. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">
            The primary key of the parent entity in the relationship, as a string.
            </param>
            <param name="newChildId">
            The primary key of the new child entity entering into the relationship, as a string.
            </param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <returns>
            The Id of the removed child, if it is removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/>, as a string; null if it is not.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.ReplaceChildWithNewAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with a new entity. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">The primary key of the parent entity in the relationship, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.ReplaceChildWithNewAsync(System.String,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with a new entity. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">The primary key of the parent entity in the relationship, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.UpdateAsync(System.Object)">
            <summary>
            Asynchronously updates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the updated item.
            </summary>
            <param name="item">The item to update.</param>
            <returns>A ViewModel representing the updated item.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.IRepository.UpdateAsync(System.Object,System.String)">
            <summary>
            Asynchronously updates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the updated item.
            </summary>
            <param name="item">The item to update.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the updated item.</returns>
        </member>
        <member name="T:VueCoreFramework.Data.Repository`1">
            <summary>
            Handles operations with an <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> for a particular class.
            </summary>
            <typeparam name="T">
            The class whose operations with the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> are handled by this
            <see cref="T:VueCoreFramework.Data.Repository`1"/>.
            </typeparam>
        </member>
        <member name="P:VueCoreFramework.Data.Repository`1.EntityType">
            <summary>
            The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType"/> of this Repository. Read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Repository`1.FieldDefinitions">
            <summary>
            The <see cref="T:VueCoreFramework.Models.FieldDefinition"/> s representing the properties of the repository's type. Read-only.
            </summary>
            <remarks>Calculates on demand and caches for future reference.</remarks>
        </member>
        <member name="P:VueCoreFramework.Data.Repository`1.PrimaryKey">
            <summary>
            The primary key <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty"/> of this Repository's entity type. Read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Data.Repository`1.PrimaryKeyVMProperty">
            <summary>
            The name of the ViewModel property which indicates the primary key. Read-only.
            </summary>
            <remarks>
            References a class constant, but made available as an instance property so that it can be
            defined on the interface.
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.#ctor(VueCoreFramework.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Data.Repository`1"/>.
            </summary>
            <param name="context">The <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> wrapped by this <see cref="T:VueCoreFramework.Data.Repository`1"/>.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.AddAsync(System.Reflection.PropertyInfo,System.String,System.String)">
            <summary>
            Asynchronously creates a new instance of the repository's type and adds it to the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> instance.
            </summary>
            <param name="childProp">
            An optional navigation property which will be set on the new object.
            </param>
            <param name="parentId">
            The primary key of the entity which will be set on the <paramref name="childProp"/>
            property, as a string.
            </param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel instance representing the newly added entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.AddAsync(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Asynchronously creates a new instance of the repository's type and adds it to the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/> instance.
            </summary>
            <param name="childProp">
            An optional navigation property which will be set on the new object.
            </param>
            <param name="parentId">
            The primary key of the entity which will be set on the <paramref name="childProp"/>
            property, as a string.
            </param>
            <returns>A ViewModel instance representing the newly added entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.AddChildrenToCollectionAsync(System.String,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously adds an assortment of child entities to a parent entity under the given
            navigation property.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property to which the children will be added.</param>
            <param name="childIds">The primary keys of the child entities which will be added, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.DuplicateAsync(System.String,System.String)">
            <summary>
            Asynchronously duplicates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the new copy.
            </summary>
            <param name="id">The primary key of the entity to be copied, as a string.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the new item.</returns>
            <remarks>
            All non-navigation properties are copied. Navigation properties for one-to-many or
            many-to-many relationships are duplicated. Navigation properties for other
            relationships are left null (since the relationship forbids having more than one).
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.DuplicateAsync(System.String)">
            <summary>
            Asynchronously duplicates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the new copy.
            </summary>
            <param name="id">The primary key of the entity to be copied, as a string.</param>
            <returns>A ViewModel representing the new item.</returns>
            <remarks>
            All non-navigation properties are copied. Navigation properties for one-to-many or
            many-to-many relationships are duplicated. Navigation properties for other
            relationships are left null (since the relationship forbids having more than one).
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.FindAsync(System.String,System.String)">
            <summary>
            Finds an entity with the given primary key value and returns a ViewModel for that entity.
            If no entity is found, null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the item found, or null if none is found.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.FindAsync(System.String)">
            <summary>
            Finds an entity with the given primary key value and returns a ViewModel for that entity.
            If no entity is found, null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <returns>A ViewModel representing the item found, or an empty ViewModel if none is found.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.FindItemAsync(System.String)">
            <summary>
            Finds an entity with the given primary key value. If no entity is found, then null is returned.
            </summary>
            <param name="id">The primary key of the entity to be found, as a string.</param>
            <returns>
            The item found, or null if none is found.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.FindItemWithPKAsync(System.Object)">
            <summary>
            Finds an entity with the given primary key value. If no entity is found, then null is returned.
            </summary>
            <param name="key">The primary key of the entity to be found.</param>
            <returns>
            The item found, or null if none is found.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetAllAsync(System.String)">
            <summary>
            Enumerates all the entities in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>'s set, returning a
            ViewModel representing each.
            </summary>
            <param name="culture">A string indicating the current culture.</param>
            <returns>ViewModels representing the items in the set.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetAllAsync">
            <summary>
            Enumerates all the entities in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>'s set, returning a
            ViewModel representing each.
            </summary>
            <returns>ViewModels representing the items in the set.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetAllChildIdsAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Finds the primary keys of all child entities in the given relationship, as strings.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetChildIdAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Finds the primary key of a child entity in the given relationship, as a string.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetChildPageAsync(System.String,System.Reflection.PropertyInfo,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the set of child entities in a given relationship with the
            given paging parameters, as ViewModels.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetChildPageAsync(System.String,System.Reflection.PropertyInfo,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim})">
            <summary>
            Calculates and enumerates the set of child entities in a given relationship with the
            given paging parameters, as ViewModels.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetChildTotalAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Retrieves the total number of child entities in the given relationship.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the parent entity.</param>
            <returns>
            A <see cref="T:System.Int64"/> that represents the total number of children in the relationship.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetPageAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the set of entities with the given paging parameters, as ViewModels.
            </summary>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="except">
            An enumeration of primary keys of items which should be excluded from the results before
            calculating the page contents, as strings.
            </param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetPageAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})">
            <summary>
            Calculates and enumerates the set of entities with the given paging parameters, as ViewModels.
            </summary>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="except">
            An enumeration of primary keys of items which should be excluded from the results before
            calculating the page contents, as strings.
            </param>
            <param name="claims">The collection of claims held by the current user.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetPageItemsAsync(System.Linq.IQueryable{System.Object},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Calculates and enumerates the given items with the given paging parameters, as ViewModels.
            </summary>
            <param name="items">The items to filter, sort, and page.</param>
            <param name="search">
            An optional search term which will filter the results. Any string or numeric property
            with matching text will be included.
            </param>
            <param name="sortBy">
            An optional property name which will be used to sort the items before calculating the
            page contents.
            </param>
            <param name="descending">
            Indicates whether the sort is descending; if false, the sort is ascending.
            </param>
            <param name="page">The page number requested.</param>
            <param name="rowsPerPage">The number of items per page.</param>
            <param name="claims">The collection of claims held by the current user.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetPrimaryKeyFromString(System.String)">
            <summary>
            Converts the given string into its equivalent primary key for this type.
            </summary>
            <param name="pk_string">The primary key to convert, as a string.</param>
            <returns>The primary key, as whatever type is defined by the entity.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.GetTotalAsync">
            <summary>
            Asynchronously returns a <see cref="T:System.Int64"/> that represents the total number of entities
            in the set.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.RemoveAsync(System.String)">
            <summary>
            Asynchronously removes an entity from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="id">The primary key of the entity to remove, as a string.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.RemoveChildrenFromCollectionAsync(System.String,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously removes an assortment of child entities from a parent entity under the
            given navigation property.
            </summary>
            <param name="id">The primary key of the parent entity, as a string.</param>
            <param name="childProp">The navigation property from which the children will be removed.</param>
            <param name="childIds">The primary keys of the child entities which will be removed, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.RemoveFromParentAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously terminates a relationship bewteen two entities. If the child entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="id">The primary key of the child entity whose relationship is being severed, as a string.</param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
            <returns>True if the item is removed from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>, false if not.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.RemoveRangeAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously removes a collection of entities from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>.
            </summary>
            <param name="ids">An enumeration of the primary keys of the entities to remove, as strings.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.RemoveRangeFromParentAsync(System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously terminates a relationship for multiple entities. If any child entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="ids">
            An enumeration of primary keys of child entities whose relationships are being severed, as strings.
            </param>
            <param name="childProp">The navigation property of the relationship being severed.</param>
            <returns>A list of the Ids of any items removed from the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>, as strings.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.ReplaceChildAsync(System.String,System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with another one. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">
            The primary key of the parent entity in the relationship, as a string.
            </param>
            <param name="newChildId">
            The primary key of the new child entity entering into the relationship, as a string.
            </param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <returns>
            The Id of the removed child, if it is removed from the <see
            cref="T:VueCoreFramework.Data.ApplicationDbContext"/>, as a string; null if it is not.
            </returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.ReplaceChildWithNewAsync(System.String,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with a new entity. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">The primary key of the parent entity in the relationship, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
            <param name="culture">A string indicating the current culture.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.ReplaceChildWithNewAsync(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Asynchronously creates a relationship between two entities, replacing another entity
            which was previously in that relationship with a new entity. If the replaced entity is
            made an orphan by the removal and is not a MenuClass object, it is then removed from the
            <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/> entirely.
            </summary>
            <param name="parentId">The primary key of the parent entity in the relationship, as a string.</param>
            <param name="childProp">The navigation property of the relationship on the child entity.</param>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.UpdateAsync(System.Object,System.String)">
            <summary>
            Asynchronously updates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the updated item.
            </summary>
            <param name="item">The item to update.</param>
            <param name="culture">A string indicating the current culture.</param>
            <returns>A ViewModel representing the updated item.</returns>
        </member>
        <member name="M:VueCoreFramework.Data.Repository`1.UpdateAsync(System.Object)">
            <summary>
            Asynchronously updates an entity in the <see cref="T:VueCoreFramework.Data.ApplicationDbContext"/>. Returns a
            ViewModel representing the updated item.
            </summary>
            <param name="item">The item to update.</param>
            <returns>A ViewModel representing the updated item.</returns>
        </member>
        <member name="T:VueCoreFramework.Extensions.EnumExtensions">
            <summary>
            Custom extensions for enum.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.EnumExtensions.GetDescription(System.Type,System.Object)">
            <summary>
            Gets the description of the enum value, or the Name of the value if no
            explicit description has been set.
            </summary>
            <returns>
            The description, or null if the value is not named (e.g. a combined Flags
            value, or a value which is simply incorrect).
            </returns>
        </member>
        <member name="T:VueCoreFramework.Extensions.StringExtensions">
            <summary>
            Custom extensions for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.StringExtensions.ToInitialCaps(System.String)">
            <summary>
            Gets a version of this string with the first character converted to upper case.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.StringExtensions.ToInitialLower(System.String)">
            <summary>
            Gets a version of this string with the first character converted to lower case.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.StringExtensions.GetSingularForms(System.String)">
            <summary>
            Gets a set of possible singularized versions of this string (including the unchanged string).
            </summary>
            <remarks>
            All replacement endings (e.g. 'y' for 'ies') will be in lower case, regardless of the
            case of the original string.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Extensions.TypeExtensions">
            <summary>
            Custom extensions for <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.TypeExtensions.GetAttribute``1(System.Object)">
            <summary>
            Gets an Attribute of the given type for an enum.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.TypeExtensions.IsIntegralNumeric(System.Type)">
            <summary>
            Determines if the <see cref="T:System.Type"/> is an integer-type numeric type.
            </summary>
            <remarks>
            Integer-type numeric types are considered to include <see cref="T:System.Byte"/>, <see
            cref="T:System.SByte"/>, <see cref="T:System.Int16"/>, <see cref="T:System.UInt16"/>, <see cref="T:System.Int32"/>, <see
            cref="T:System.UInt32"/>, <see cref="T:System.Int64"/>, and <see cref="T:System.UInt64"/>.
            </remarks>
        </member>
        <member name="M:VueCoreFramework.Extensions.TypeExtensions.IsNumeric(System.Type)">
            <summary>
            Determines if the Type is a numeric type.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Extensions.TypeExtensions.IsRealNumeric(System.Type)">
            <summary>
            Determines if the <see cref="T:System.Type"/> is a real-type numeric type.
            </summary>
            <remarks>
            Real-type numeric types are considered to include <see cref="T:System.Single"/>, <see
            cref="T:System.Double"/>, and <see cref="T:System.Decimal"/>.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.ApplicationUser">
            <summary>
            Represents a user.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ApplicationUser.Culture">
            <summary>
            The user's selected culture.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ApplicationUser.NewEmail">
            <summary>
            The new email requested during an email change.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ApplicationUser.OldEmail">
            <summary>
            The original email after an email change.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ApplicationUser.LastEmailChange">
            <summary>
            The date/time of the last email change.
            </summary>
            <remarks>
            Only one is allowed per day, to make it more difficult for an unauthorized party who
            gains acccess to an account to perfom a double-change, and thereby make it impossible for
            the original owner to recover the account.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.ApplicationUser.AdminLocked">
            <summary>
            Indicates that the user's account has been locked by an admin.
            </summary>
            <remarks>
            An admin lock prevents any use or access with the account. An account is locked rather
            than deleted to prevent re-registration with the same information. Since only verified
            email accounts are allowed access, a repeat offender must at least go to the trouble of
            creating new valid email accounts in order to create new site accounts.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.Airline">
            <summary>
            A <see cref="T:VueCoreFramework.Models.DataItem"/> representing an airline.
            </summary>
            <remarks>
            Note that Airlines are being nested within the Country category, although they are both
            MenuClass types, and in fact the Airline type is a peer of Country, which can be created and
            deleted independently of any Countries. MenuClass types can be organized in the framework
            menu in any order and hierarchy, regardless of the database relationships they share (if
            any).
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Airline.Countries">
            <summary>
            The countries in which the airline operates.
            </summary>
            <remarks>
            It is not necessary to hide either side of a many-to-many relationship. Here, airlines
            have been made conceptual children of countries: nested in their menu and accessible from
            their form, but not vice-versa. This is an example of a conceptual hierarchy being
            created in the framework to simplify the user experience, which does not represent the
            data structure exactly.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Airline.International">
            <summary>
            Indicates whether the airline offers international flights.
            </summary>
            <remarks>
            Obviously this would be a caluclated property in a real application. It is implemented in
            this way for the purpose of demonstrating nullable boolean fields. The Description
            property of the Display Attribute is used to set help text.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.AirlineCountry">
            <summary>
            The many-to-many join table entity class which joins Airlines to Countries.
            </summary>
            <remarks>
            The SPA framework is able to recognize and interpret many-to-many join tables, but only when
            their only properties are a pair of navigation properties and foreign keys. A many-to-many
            join table with additional properties of its own will not be recognized by the SPA framework
            as a join table, but as an entity class unto itself, and will model each navigation as a
            one-to-many relationship from that class. This is likely to be the desired behavior in most
            cases anyhow, since additional properties will usually mean that such classes should be
            visible and editable on tables and forms of their own, not handled 'invisibly' as join tables.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.AirlineCountry.Airline">
            <summary>
            The <see cref="T:VueCoreFramework.Models.Airline"/> referred to by this relationship.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.AirlineCountry.AirlineId">
            <summary>
            The foreign key for <see cref="P:VueCoreFramework.Models.AirlineCountry.Airline"/>.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.AirlineCountry.Country">
            <summary>
            The <see cref="T:VueCoreFramework.Models.Country"/> referred to by this relationship.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.AirlineCountry.CountryId">
            <summary>
            The foreign key for <see cref="P:VueCoreFramework.Models.AirlineCountry.Country"/>.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.CityTransit">
            <summary>
            Types of city transportation.
            </summary>
            <remarks>
            A Flags enum is represented by the framework as a multiselect input, allowing 0 or more
            selections. A 'None' value (0) is not required for the framework, and will be a functionless
            placeholder in the dropdown (selecting it will have no effect).
            </remarks>
        </member>
        <member name="F:VueCoreFramework.Models.CityTransit.BusStation">
            <remarks>
            Description can be used to set the display value used in the dropdown. The name of the
            value is used otherwise.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.City">
            <summary>
            A <see cref="T:VueCoreFramework.Models.NamedDataItem"/> representing a city.
            </summary>
            <remarks>
            Because this class doesn't have the <see cref="T:VueCoreFramework.Data.Attributes.MenuClassAttribute"/>, it will not appear in
            the menu of the SPA, and items of this type will therefore only be available to view or edit
            as children of another object (a <see cref="T:VueCoreFramework.Models.Country"/>, in this case). The
            DashboardFormContent property indicates that a custom component exists which will be
            displayed above data forms when viewing cities.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.City.LocalTimeAtGMTMidnight">
            <summary>
            The local time in the city at GMT midnight.
            </summary>
            <remarks>
            The DataType can control the type of field displayed in forms. Time will present a time
            picker alone. Without this specification, a DateTime property would be represented by
            both date and timne pickers.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.City.Population">
            <summary>
            The population of the city.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.City.Transit">
            <summary>
            The types of transportation available in the city.
            </summary>
            <remarks>
            A Flags enum property is represented by the framework as a multiselect input. In a data
            table, no selection will be displayed as '[None]', a selection with a valid name or
            description will be displayed, and any other selection (e.g. a combination of Flags
            values) will be displayed as '[...]', to avoid the expensive operations required to
            validate and break down the flag value. For this reason, it may be best to hide Flags
            enums in tables when it is expected that multiple selections will be common, as is done
            here, to avoid a column full of unhelpful placeholder text. When single selections are
            expected to be more common, the field can be left visible so that the named selections
            can be shown in tables.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.City.Country">
            <summary>
            The country to which this city belongs.
            </summary>
            <remarks>
            It is not necessary to hide inverse references on child objects (a field with a view/edit
            option will be generated). However, it can make views cleaner when the child object has
            just one parent, since the parent object can always be accessed from the child by going
            back or cancelling the current operation, making a reverse navigation field redundant. In
            cases where a child may be in relationships to different parents, visible reverse
            navigation fields can be helpful to browse among the related entities.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.City.CountryId">
            <summary>
            The foreign key for <see cref="P:VueCoreFramework.Models.City.Country"/>.
            </summary>
            <remarks>
            Although Entity Framework can automatically create foreign keys, the SPA framework
            requires explicitly defined foreign keys for one-to-one and many-to-one relationships.
            Foreign key properties are never shown by the framework, so it isn't necessary to mark it
            as hidden.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.City.IsCapitol">
            <summary>
            Indicates that this city is the capitol of the country.
            </summary>
            <remarks>
            Since only one city may be the capitol, but there is no way to enforce such a constraint
            with the Entity Framework and VueCoreFramework Attribute decoration system, a custom
            control is provided on the City form to perform this function instead. Therefore, it is
            hidden from the normal form (but not in tables).
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.Country">
            <summary>
            A <see cref="T:VueCoreFramework.Models.NamedDataItem"/> representing a country.
            </summary>
            <remarks>
            Because this class is decorated with the MenuClass attribute, it will appear in the
            SPA framework's displayed menu.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.Airlines">
            <summary>
            The airlines operating in the country.
            </summary>
            <remarks>
            A many-to-many relationship with another MenuClass entity. AirlineCountry is a
            many-to-many join table entity class. Navigation properties must have the JsonIgnore
            Attribute to prevent the model from attempting to set its value to the placeholder text
            used in the ViewModel. It isn't necesary to hide navigation properties in data tables,
            but since all a table will show is '[None]' for an empty collection and '[...]' for a
            non-empty collection, it will usually provide a better user experience to avoid filling a
            column with such placeholder text. It has a property constructor in order to avoid a null
            collection during certain framework operations; this is a requirement of all collection
            properties for the SPA framework.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.EpiIndex">
            <summary>
            The EPI Index of the country.
            </summary>
            <remarks>
            The Display Attribute is used to control the decoration of the field. Prompt will set
            placeholder text for most fields. GroupName can be used to group fields together under a
            heading. Range can be used for numeric, text, DateTime, or TimeSpan fields. For text
            fields, it indicates required length.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.FlagPrimaryColor">
            <summary>
            The main color of the country's flag.
            </summary>
            <remarks>
            The 'Color' custom DataType is special in the SPA framework, and will generate a color
            picker control in edit forms. The data is represented as a 7-character hex string
            (#000000), and this raw value is shown on tables (which only display text, not rich
            content like colors). The field is hidden from tables here to avoid such a
            non-user-friendly display format, but that is not required. Display Name is used to set a
            label for the input group (color fields do not use placeholder text).
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.Capitol">
            <summary>
            The country's capitol city.
            </summary>
            <remarks>
            This is a computed property which finds the child with the relevant property. Since it is
            a reference to an entity type, but is not an actual Entity Framework navigation property,
            VueCoreFramework will show it as a read-only label.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.Cities">
            <summary>
            The cities of the country.
            </summary>
            <remarks>
            A many-to-one relationship with a child object.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Country.Leader">
            <summary>
            The country's head of government.
            </summary>
            <remarks>
            A one-to-one relationship with a child object.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.MaritalStatus">
            <summary>
            Types of marital status.
            </summary>
            <remarks>
            A non-Flags enum is represented by the framework as a select input, allowing a single
            selection. A 'None' entry, if present, will be treated the same as any other selection. The
            selection control will not supply a 'None' or other unset value if the enum does not contain
            one. The framework also will not add an unset selection placeholder for Nullable Enum
            properties, in order to avoid duplicating any existing 'None' entry. For this reason Nullable
            Enum properties are not feasible with the SPA framework (they will not cause any errors, but
            it will not be possible to preserve nulls; updates from the SPA will always contain a value
            for the property). Use a 'None' value in your enum if you wish an unset value to be
            represented in your data, instead of making the property nullable.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.Leader">
            <summary>
            A <see cref="T:VueCoreFramework.Models.NamedDataItem"/> representing a country's head of government.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.Age">
            <summary>
            The age of the leader.
            </summary>
            <remarks>
            In a real application this would surely be computed from birthdate; it is provided here
            purely for the demonstration of numeric input fields.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.Birthdate">
            <summary>
            The birthdate of the leader.
            </summary>
            <remarks>
            A DataType of Date is represented in forms by a date picker. The time portion is ignored.
            Because this is a nullable property, the field will also have the option to set a null
            value rather than a date.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.Country">
            <summary>
            The country represented by this leader.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.CountryId">
            <summary>
            Foreign key for <see cref="P:VueCoreFramework.Models.Leader.Country"/>
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.MaritalStatus">
            <summary>
            The marital status of the leader.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Leader.TimeInOfficeTicks">
            <summary>
            Time in office (as a Ticks value).
            </summary>
            <remarks>
            Although the SPA framework can handle TimeSpan properties, SQL databases cannot store
            TimeSpans >= 24 hours, so the SPA framework can also interpret long values as TimeSpan
            Ticks by indicating the Duration DataType. Display Description is used to set hint text
            for the field. The DisplayFormat DataFormatString can be used to indicate which values of
            the TimeSpan will be displayed (and available for editing); it must take the form
            'y:M:d:h:m:s' representing years, months, days, hours, minutes, seconds (including
            fractional seconds). Any number of indicators may be omitted from the beginning or end
            (e.g. the format below shows only years, months, and days; not hours, minutes, or
            seconds), but omitting any in the middle is disregarded (since overflow from a low unit
            must be shown and editable with in-between units). Note that Range for a Duration uses
            TimeSpan units, even when the property is a long.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Models.DataItem">
            <summary>
            A base class for database objects. Provides a GUID primary key.
            </summary>
            <remarks>
            The SPA framework doesn't require using a base class like this, it's just used for
            convenience in the examples.
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Models.DataItem.Id">
            <summary>
            The unique ID (primary key) of the item.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.FieldDefinition">
            <summary>
            A ViewModel for field definitions used by vue-form-generator.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Disabled">
            <summary>
            Indicates whether the field is disabled.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.GroupName">
            <summary>
            Optionally designates a group to which the field belongs.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Help">
            <summary>
            Optional help text displayed with the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.HideInTable">
            <summary>
            Indicates that the field is hidden in data tables (but may still be visible in forms).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Hint">
            <summary>
            Optional hint text displayed with the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Icon">
            <summary>
            The name of a Material Icon displayed with certain fields.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.InputType">
            <summary>
            The input type of certain fields which can display more than one type of data.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.InverseType">
            <summary>
            For navigation properties, indicates the name of the inverse navigation property.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.IsName">
            <summary>
            Indicates that the field is a Name property.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Label">
            <summary>
            Optional label text displayed with the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Max">
            <summary>
            An optional maximum value for the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Min">
            <summary>
            An optional minimum value for the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Model">
            <summary>
            The name of the model property represented by the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.NavigationType">
            <summary>
            For navigation properties, indicates the type of navigation property.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.ParentType">
            <summary>
            For navigation properties, indicates the name of the parent data type.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Pattern">
            <summary>
            An optional regex pattern used to validate the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Placeholder">
            <summary>
            Optional placeholder text displayed with the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Prefix">
            <summary>
            Optional text displayed before a text field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Readonly">
            <summary>
            Indicates that the text field is read-only.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Required">
            <summary>
            Indicates that the field is required.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Rows">
            <summary>
            An optional value indicating the number of rows in a textarea field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Step">
            <summary>
            An optional step value for numeric text fields, and TimeSpan fields.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Suffix">
            <summary>
            Optional text displayed after a text field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Type">
            <summary>
            Indicates the type of field. Required.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Validator">
            <summary>
            An optional name of a validator used to validate the field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Values">
            <summary>
            The list of options for a select or multiselect field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.FieldDefinition.Visible">
            <summary>
            Indicates whether the field is visible on data tables and forms.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ChoiceOption">
            <summary>
            Represents an option in a select or multiselect field.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ChoiceOption.Text">
            <summary>
            The text displayed for the option.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ChoiceOption.Value">
            <summary>
            The value of the option.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ICulturalDataItem">
            <summary>
            Types which implement this interface provide an overload of <see cref="M:VueCoreFramework.Models.ICulturalDataItem.ToString(System.String)"/> which
            accepts a culture.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Models.ICulturalDataItem.ToString(System.String)">
            <summary>
            Returns a representation of the object for the given culture, as a <see cref="T:System.String"/>.
            </summary>
            <param name="culture">A culture name.</param>
            <returns>A representation of the object for the given culture, as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:VueCoreFramework.Models.Log">
            <summary>
            A model for log entries.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Id">
            <summary>
            The ID (primary key) for the log entry.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Timestamp">
            <summary>
            The timestamp of the log entry.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Level">
            <summary>
            The level of the log entry.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Message">
            <summary>
            An optional message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Logger">
            <summary>
            The logger used to create this entry.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Callsite">
            <summary>
            The site at which the entry was generated.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Exception">
            <summary>
            The exception type which caused the log entry to be cretaed, if any.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Log.Url">
            <summary>
            The URL of the page on which the log entry was generated, if any.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.Message">
            <summary>
            Represents a message sent within the SPA framework to a user, or to a group.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.Id">
            <summary>
            The primary key of the <see cref="T:VueCoreFramework.Models.Message"/>.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.Content">
            <summary>
            The content of the message. Accepts markdown-formatted text.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.GroupRecipient">
            <summary>
            The group to which the message was sent (if not an individual message).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.GroupRecipientName">
            <summary>
            The name of the group to which the message was sent (if not an individual message).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.IsSystemMessage">
            <summary>
            Indicates that the message is from the system, rather than from a user.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.Received">
            <summary>
            Indicates that the single recipient has read the message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.RecipientDeleted">
            <summary>
            Indicates that the single recipient has marked the message as deleted.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.Sender">
            <summary>
            The user who sent the message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.SenderDeleted">
            <summary>
            Indicates that the sender has marked the message as deleted.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.SenderUsername">
            <summary>
            The name of the user who sent the message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.SingleRecipient">
            <summary>
            The user to whom the message was sent (if not a group message).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.SingleRecipientName">
            <summary>
            The name of the user to whom the message was sent (if not a group message).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.Message.Timestamp">
            <summary>
            The date and time when the message was sent.
            </summary>
            <remarks>Set automatically by the database.</remarks>
        </member>
        <member name="T:VueCoreFramework.Models.NamedDataItem">
            <summary>
            A convenience subclass of <see cref="T:VueCoreFramework.Models.DataItem"/> which defines a name property and overrides
            ToString to display that name.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.NamedDataItem.Name">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Models.NamedDataItem.ToString">
            <summary>
            Returns the item's name for the default culture, as a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Models.NamedDataItem.ToString(System.String)">
            <summary>
            Returns the item's name for the given culture, as a <see cref="T:System.String"/>.
            </summary>
            <param name="culture">A culture name.</param>
            <returns>The item's name for the given culture, as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel">
            <summary>
            A ViewModel used to transfer information during user account login tasks.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.Username">
            <summary>
            The username or email address of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.Password">
            <summary>
            The password for the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.AuthProvider">
            <summary>
            The name of a third-party authorization provider.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.RememberUser">
            <summary>
            Indicates that the user wishes their authorization to be stored in the browser and used
            again during future sessions, rather than forgotten after navigating away from the site.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.ReturnUrl">
            <summary>
            An optional URL to which the user will be redirected.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.Redirect">
            <summary>
            Indicates that the user is to be redirected to another page.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.Token">
            <summary>
            A JWT bearer token.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.LoginViewModel.Errors">
            <summary>
            A list of errors generated during the operation.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel">
            <summary>
            A ViewModel used to transfer information during user account registration tasks.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel.Username">
            <summary>
            The username for the account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel.Email">
            <summary>
            The email address of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel.Password">
            <summary>
            The password for the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.RegisterViewModel.ConfirmPassword">
            <summary>
            The password for the user account, repeated.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel">
            <summary>
            A ViewModel used to transfer information during a user account password reset.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel.Email">
            <summary>
            The email address of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel.NewPassword">
            <summary>
            The new password for the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel.ConfirmPassword">
            <summary>
            The new password for the user account, repeated.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AccountViewModels.ResetPasswordViewModel.Code">
            <summary>
            The code generated to identify the callback link in the email generated by the operation.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.AuthorizationViewModel">
            <summary>
            A ViewModel used to transfer information during user account authorization tasks.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Authorized">
            <summary>
            Indicates that the user is authorized for the requested operation.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Login">
            <summary>
            Indicates that the user must sign in before performing the requested operation.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.ShareAny">
            <summary>
            Indicates that the user is authorized to share the requested data with anyone.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.ShareGroup">
            <summary>
            Indicates that the user is authorized to share the requested data with a group.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Unauthorized">
            <summary>
            Indicates that the user is not authorized for the requested operation.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Authorization">
            <summary>
            A value indicating whether the user is authorized for the requested action or not.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.CanShare">
            <summary>
            Indicates that the user is authorized to share/hide the requested data.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Email">
            <summary>
            The email address of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.IsAdmin">
            <summary>
            Indicates whether the user is a member of the administrator role.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.IsSiteAdmin">
            <summary>
            Indicates whether the user is a member of the site administrator role.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Token">
            <summary>
            A JWT bearer token.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.AuthorizationViewModel.Username">
            <summary>
            The username of the user account.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.ConversationViewModel">
            <summary>
            Used to send information about a conversation.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ConversationViewModel.Interlocutor">
            <summary>
            The username of the other party in the conversation.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ConversationViewModel.UnreadCount">
            <summary>
            The number of messages the current user has not read in the conversation.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.GroupViewModel">
            <summary>
            Used to transfer information about a group (role).
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.GroupViewModel.Name">
            <summary>
            The name of the group.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.GroupViewModel.Manager">
            <summary>
            The username of the group's manager.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.GroupViewModel.Members">
            <summary>
            The members of the group (including the manager).
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.ManageUserViewModel">
            <summary>
            A ViewModel used to transfer information during user account management tasks.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.Username">
            <summary>
            The username of the account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.Email">
            <summary>
            The email address of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.OldPassword">
            <summary>
            The original password of the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.NewPassword">
            <summary>
            The new password for the user account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.ConfirmPassword">
            <summary>
            The new password for the user account, repeated.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ManageUserViewModel.AuthProvider">
            <summary>
            The name of a third-party authorization provider.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.MessageViewModel">
            <summary>
            Used to transfer information about a message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.Content">
            <summary>
            The content of the message. May have markdown-formatted text.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.IsSystemMessage">
            <summary>
            Indicates that the message is from the system, rather than from a user.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.IsUserAdmin">
            <summary>
            Indicates that the user who sent the message is an admin.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.IsUserManager">
            <summary>
            Indicates that the user who sent the message is the group manager.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.IsUserSiteAdmin">
            <summary>
            Indicates that the user who sent the message is the site admin.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.Received">
            <summary>
            Indicates that the single recipient has read the message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.Username">
            <summary>
            The name of the user who sent the message.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.MessageViewModel.Timestamp">
            <summary>
            The date and time when the message was sent.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.ShareViewModel">
            <summary>
            Used to transfer information about data sharing.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ShareViewModel.Level">
            <summary>
            Indicates the type of sharing (e.g. 'permission/data/view').
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ShareViewModel.Name">
            <summary>
            The name of the user or group with whom the data is shared.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ShareViewModel.ShortLevel">
            <summary>
            Indicates the short form of the sharing type (e.g. 'view').
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.ShareViewModel.Type">
            <summary>
            Indicates whether the data is shared with a user or group.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Models.ViewModels.UserViewModel">
            <summary>
            Used to transfer information about a user.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.UserViewModel.Email">
            <summary>
            The user's email address.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.UserViewModel.IsLocked">
            <summary>
            Indicates whether the user's account has been locked by an admin.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Models.ViewModels.UserViewModel.Username">
            <summary>
            The username of the user.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Program">
            <summary>
            The main class of the application.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Program.Main(System.String[])">
            <summary>
            The main entry point of the application.
            </summary>
            <param name="args">Any commandline arguments passed to the application on launch.</param>
        </member>
        <member name="T:VueCoreFramework.Services.AdminOptions">
            <summary>
            Options configuration object containing information about the default admin email account.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AdminOptions.AdminEmailAddress">
            <summary>
            The default site admin email address.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AdminOptions.AdminPassword">
            <summary>
            The default site admin email password.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.AuthMessageSender">
            <summary>
            This class is used by the application to send email.
            </summary>
            <remarks>
            See https://go.microsoft.com/fwlink/?LinkID=532713
            </remarks>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSender.Options">
            <summary>
            The email options configuration object.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Services.AuthMessageSender.#ctor(Microsoft.Extensions.Options.IOptions{VueCoreFramework.Services.AuthMessageSenderOptions},Microsoft.Extensions.Logging.ILogger{VueCoreFramework.Services.AuthMessageSender})">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Services.AuthMessageSender"/>.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Services.AuthMessageSender.SendEmailAsync(System.String,System.String,System.String)">
            <summary>
            Sends an email message to the supplied address.
            </summary>
            <param name="email">The email address to which the message will be sent.</param>
            <param name="subject">The subject of the email message.</param>
            <param name="message">The body of the email message.</param>
        </member>
        <member name="T:VueCoreFramework.Services.AuthMessageSenderOptions">
            <summary>
            Options configuration object containing information about the email service used to send email from the application.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.EmailFromName">
            <summary>
            The 'from' name for sent emails.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.EmailFromAddress">
            <summary>
            The email address from which messages will be sent.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.EmailFromPassword">
            <summary>
            The password for the email account from which messages will be sent.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.SmtpServer">
            <summary>
            The address of the SMTP server used to send email.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.SmtpPort">
            <summary>
            The port number used for email.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.UseSsl">
            <summary>
            Indicates whether SSL is required by the mail service.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.UseXOAUTH2">
            <summary>
            Indicates whether the XOATH2 protocol is used by the mail service.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.AuthMessageSenderOptions.RequiresAuth">
            <summary>
            Indicates whether the mail service requires authorization.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.CustomClaimTypes">
            <summary>
            The colleciton of custom Claim types used by the framework.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionGroupSiteAdmin">
            <summary>
            Indicates site admin level permissions.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionGroupAdmin">
            <summary>
            Indicates admin level permissions.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionGroupManager">
            <summary>
            Indicates group manager level permissions.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionDataAll">
            <summary>
            Indicates permission for all data operations.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionDataView">
            <summary>
            Indicates permission for viewing data.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionDataEdit">
            <summary>
            Indicates permission for editing data.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionDataAdd">
            <summary>
            Indicates permission for creating data.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionDataOwner">
            <summary>
            Indicates ownership permissions for a data item.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomClaimTypes.PermissionAll">
            <summary>
            Indicates all permissions.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.CustomRoles">
            <summary>
            The colleciton of custom Roles used by the framework.
            </summary>
        </member>
        <member name="F:VueCoreFramework.Services.CustomRoles.SiteAdmin">
            <summary>
            The site admin role.
            </summary>
            <remarks>
            Always a member of the admin role as well.
            Always only one member.
            Can add/remove users to/from the admin group.
            Can transfer the site-admin role to another admin user.
            </remarks>
        </member>
        <member name="F:VueCoreFramework.Services.CustomRoles.Admin">
            <summary>
            The admin role.
            </summary>
            <remarks>
            Can share/hide data with all (removes the need for permission).
            Can share/hide data with any group (even if the admin is not a member; but note that
            nothing can be hidden from the admin or site admin roles).
            Can lock/unlock user accounts (except admin accounts).
            </remarks>
        </member>
        <member name="F:VueCoreFramework.Services.CustomRoles.AllUsers">
            <summary>
            The default user role.
            </summary>
            <remarks>
            Implemented as a role so that data permission claims may be added to all users as a
            group. No individual users are expected to have this role added, and doing so will have
            no effect. Rather, claims for this role are automatically included for every user.
            </remarks>
        </member>
        <member name="T:VueCoreFramework.Services.EmailMessages">
            <summary>
            A collection of string constants used to construct email messages.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.ErrorMessages">
            <summary>
            A collection of string constants used for error messages.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.IEmailSender">
            <summary>
            This interface is used by the application to send email.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Services.IEmailSender.SendEmailAsync(System.String,System.String,System.String)">
            <summary>
            Sends an email message to the supplied address.
            </summary>
            <param name="email">The email address to which the message will be sent.</param>
            <param name="subject">The subject of the email message.</param>
            <param name="message">The body of the email message.</param>
        </member>
        <member name="T:VueCoreFramework.Services.LogEvent">
            <summary>
            A collection of log event codes.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Services.TokenProviderOptions">
            <summary>
            Options configuration object containing information about JWT bearer tokens.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.TokenProviderOptions.Expiration">
            <summary>
            The time until expiration of the token.
            </summary>
        </member>
        <member name="P:VueCoreFramework.Services.TokenProviderOptions.SigningCredentials">
            <summary>
            The signature validation properties of the token.
            </summary>
        </member>
        <member name="T:VueCoreFramework.Startup">
            <summary>
            Configures services and the application's request pipeline.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of <see cref="T:VueCoreFramework.Startup"/>.
            </summary>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> used to set up configuration sources.</param>
        </member>
        <member name="P:VueCoreFramework.Startup.Configuration">
            <summary>
            The root of the configuration hierarchy.
            </summary>
        </member>
        <member name="M:VueCoreFramework.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime, and is used to add services to the container.
            </summary>
            <param name="services">A collection of service descriptors.</param>
        </member>
        <member name="M:VueCoreFramework.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory,VueCoreFramework.Data.ApplicationDbContext,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Builder.RequestLocalizationOptions})">
            <summary>
            This method gets called by the runtime, and is used to configure the HTTP request pipeline.
            </summary>
            <param name="app">Provides the mechanisms to configure the application's request pipeline.</param>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> used to set up configuration sources.</param>
            <param name="loggerFactory">Used to configure the logging system.</param>
            <param name="context">The application's Entity Framework database context.</param>
            <param name="localization">Specifies options for the <see cref="T:Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware"/>.</param>
        </member>
    </members>
</doc>
